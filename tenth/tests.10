
: test_empty_strings_equal 	" test_empty_strings_equal " .$^ "" "" ==$ 1 assertEqual ;

: test_different_strings_unequal " test_different_strings_unequal " .$^ "one" "seven" ==$ 0 assertEqual ;

: test_strings test_empty_strings_equal test_different_strings_unequal ;

#####

var test_inc_var
: test_increment
	" test_increment " .$^

	# arrange
	test_inc_var 7 @=

	# act
	test_inc_var @++

	# assert
	test_inc_var @
	8
	assertEqual
;


: test_title
	" test_title " .$^
	title 0 @+
	"HANGMAN"
	assertEqual$
;


var test_draw_count

: draw_at_spy	# in: col row string; effect: test_draw_count++, 3 values popped
	test_draw_count @++		# col row string ...
	pop pop pop 			# ...
;

: test_draw
	" test_draw " .$^
	test_draw_count 0 @=
	scaffold 10 35 "draw_at_spy" draw
	test_draw_count @ 7 assertEqual
;

: test_hangman test_title test_draw ;


#####

10 array test_s2a_array

: test_string_to_array_for_empty " test_string_to_array_for_empty " .$^
	test_s2a_array "" string_to_array

	test_s2a_array 0 @+ 0 assertEqual
	test_s2a_array make$ "" assertEqual$
;

: test_string_to_array_for_string " test_string_to_array_for_string " .$^
	test_s2a_array "cat"

	string_to_array

	test_s2a_array 0 @+ 99 assertEqual

	test_s2a_array make$ "cat" assertEqual$
;

: test_s2a_tests test_string_to_array_for_empty test_string_to_array_for_string ;



: test_length_of_empty_string " test_length_of_empty_string " .$^
	"" length$
	0 assertEqual
;

: test_length_of_nonempty_string " test_length_of_nonempty_string " .$^
	"rabbit" length$
	6 assertEqual
;

: test_length_of_strings test_length_of_empty_string test_length_of_nonempty_string ;

###



: test_empty_answer
	" test_empty_answer " .$^

	"" game_init

	game_over 1 assertEqual
;

: test_string_answer " test_string_answer " .$^
	"hi" game_init

	answer make$ "hi" assertEqual$
	clue make$ "__" assertEqual$

	game_over 0 assertEqual
;

: test_update_clue_first_letter_match " test_update_clue_first_letter_match " .$^
	37172	# guard word
	"cat" game_init

	99 update_clue	# 'c'

	clue make$ "c__" assertEqual$
	game_over 0 assertEqual
	1 assertEqual
	37172 assertEqual
;

: test_update_clue_other_letter_match " test_update_clue_other_letter_match " .$^
	531
	"canal" game_init

	97 update_clue	# 'a'

	clue make$ "_a_a_" assertEqual$
	game_over 0 assertEqual
	1 assertEqual
	531 assertEqual
;

: test_update_clue_wins " test_update_clue_wins " .$^
	37172	# guard word
	"aa" game_init

	97 update_clue	# 'a'

	1 assertEqual			# check update_clue result
	clue make$ "aa" assertEqual$
	game_over 1 assertEqual
	37172 assertEqual
;

: test_calling_string_to_array_multiple_times_doesnt_crash
	answer "canal"
	string_to_array

	answer "canal"
	string_to_array
 ;

: test_update_wrong_guesses " test_update_wrong_guesses " .$^
	135		# guard word
	"fish" game_init

	97 update_wrong_guess	# 'a'
	100 update_wrong_guess	# 'd'
	99 update_wrong_guess	# 'c'

	wrong_guesses make$ "adc" assertEqual$
	135 assertEqual
;

: test_update_clue test_empty_answer test_string_answer test_update_clue_first_letter_match test_update_clue_other_letter_match test_update_clue_wins test_update_wrong_guesses test_calling_string_to_array_multiple_times_doesnt_crash nl
;

#####
: test_all test_update_clue test_strings test_increment test_hangman test_s2a_tests test_length_of_strings nl ;
