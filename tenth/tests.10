
: test_empty_strings_equal 	" test_empty_strings_equal " .$^
	1234

	"" "" ==$

	1 assertEqual
	1234 assertEqual
;

: test_different_strings_unequal " test_different_strings_unequal " .$^
	2171
	"one" "seven" ==$

	0 assertEqual
	2171 assertEqual
;

: test_strings test_empty_strings_equal test_different_strings_unequal ;

#####

var test_inc_var
: test_increment " test_increment " .$^
	43209

	# arrange
	test_inc_var 7 @=

	# act
	test_inc_var @++

	# assert
	test_inc_var @
	8
	assertEqual

	43209 assertEqual
;


: test_title " test_title " .$^
	411
	title 0 @+

	"HANGMAN"

	assertEqual$
	411 assertEqual
;


var test_draw_count

: draw_at_spy	# in: col row string; effect: test_draw_count++, 3 values popped
	test_draw_count @++		# col row string ...
	pop pop pop 			# ...
;

: test_draw " test_draw " .$^
	314159
	test_draw_count 0 @=

	scaffold 10 35 "draw_at_spy" draw

	test_draw_count @ 7 assertEqual
	314159 assertEqual
;

: test_hangman test_title test_draw ;


#####

10 array test_s2a_array

: test_string_to_array_for_empty " test_string_to_array_for_empty " .$^
	14417
	test_s2a_array "" string_to_array

	test_s2a_array 0 @+ 0 assertEqual
	test_s2a_array make$ "" assertEqual$
	14417 assertEqual
;

: test_string_to_array_for_string " test_string_to_array_for_string " .$^
	315
	test_s2a_array "cat"

	string_to_array

	test_s2a_array 0 @+ 99 assertEqual

	test_s2a_array make$ "cat" assertEqual$
	315 assertEqual
;

: test_s2a_tests test_string_to_array_for_empty test_string_to_array_for_string ;



: test_length_of_empty_string " test_length_of_empty_string " .$^
	37281
	"" length$
	0 assertEqual
	37281 assertEqual
;

: test_length_of_nonempty_string " test_length_of_nonempty_string " .$^
	415585
	"rabbit" length$
	6 assertEqual
	415585 assertEqual
;

: test_length_of_strings test_length_of_empty_string test_length_of_nonempty_string ;

###



: test_empty_answer
	37056
	" test_empty_answer " .$^

	"" game_init

	game_over 1 assertEqual
	37056 assertEqual
;

: test_string_answer " test_string_answer " .$^
	8785
	"hi" game_init

	answer make$ "hi" assertEqual$
	clue make$ "__" assertEqual$

	game_over 0 assertEqual
	8785 assertEqual
;

: test_update_clue_first_letter_match " test_update_clue_first_letter_match " .$^
	37172	# guard word
	"cat" game_init

	99 update_clue	# 'c'

	clue make$ "c__" assertEqual$
	game_over 0 assertEqual
	1 assertEqual
	37172 assertEqual
;

: test_update_clue_other_letter_match " test_update_clue_other_letter_match " .$^
	531
	"canal" game_init

	97 update_clue	# 'a'

	clue make$ "_a_a_" assertEqual$
	game_over 0 assertEqual
	1 assertEqual
	531 assertEqual
;

: test_update_clue_wins " test_update_clue_wins " .$^
	37172	# guard word
	"aa" game_init

	97 update_clue	# 'a'

	1 assertEqual			# check update_clue result
	clue make$ "aa" assertEqual$
	game_over 1 assertEqual
	37172 assertEqual
;

: test_calling_string_to_array_multiple_times_doesnt_crash
	34127
	answer "canal"
	string_to_array

	answer "canal"
	string_to_array
	34127 assertEqual
;

: test_update_wrong_guesses " test_update_wrong_guesses " .$^
	135		# guard word
	"fish" game_init

	97 update_wrong_guess	# 'a'
	100 update_wrong_guess	# 'd'
	99 update_wrong_guess	# 'c'

	wrong_guesses make$ "adc" assertEqual$
	135 assertEqual
;

: test_update_clue test_empty_answer test_string_answer test_update_clue_first_letter_match test_update_clue_other_letter_match test_update_clue_wins test_update_wrong_guesses test_calling_string_to_array_multiple_times_doesnt_crash nl
;

#####
: test_game_loop " test_game_loop " .$^
	90210
	"aa" game_init
	"ba" read_stub_init

	"display_stub" "read_stub" game_loop

	clue make$ "aa" assertEqual$
	wrong_guesses make$ "b" assertEqual$
	90210 assertEqual
;

: test_game test_game_loop nl ;

#####
: test_all
	test_update_clue
	test_strings
	test_increment
	test_game
	test_hangman
	test_length_of_strings
	test_s2a_tests
	nl
;
