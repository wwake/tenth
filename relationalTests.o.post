// Global register values
// Free: x23, x28

.macro LOAD_ADDRESS register, location
 adrp \register, \location@PAGE
 add \register, \register, \location@PAGEOFF
.endm
.macro DATA_PUSH register
 str \register, [x19], #8
.endm
.macro DATA_POP register
 ldr \register, [x19, #-8]!
.endm
.macro DATA_POP_AB register1, register2
 DATA_POP \register1
 DATA_POP \register2
.endm
.macro DATA_TOP register
 ldr \register, [x19, #-8]
.endm
.macro CONTROL_PUSH register
 str \register, [x27], #8
.endm
.macro CONTROL_POP register
 ldr \register, [x27, #-8]!
.endm
.macro STD_PROLOG
 str lr, [sp, #-16]!
.endm
.macro STD_EPILOG
 ldr lr, [sp], #16
.endm

.include "unix_functions.macros"
.include "asUnit.macros"
.global _start
_start:
 STD_PROLOG
 TEST_ALL "relationalTests"
 bl neq_true_if_values_different
 bl neq_false_if_values_same
 bl eq_true_if_values_same
 bl eq_false_if_values_differ
 unix_exit
 STD_EPILOG
 ret
.data
.p2align 3
L_push_test_stack: .quad 0, 99, 0, 0
L_data: .quad 142, 58
.text
.p2align 3
.macro TEST_RELATION name, relop, a, b, expected
TEST_START \name
 // Arrange:
 LOAD_ADDRESS x19, L_push_test_stack
 mov x0, \a
 DATA_PUSH x0
 mov x0, \b
 DATA_PUSH x0
 // Act:
 bl \relop
 // Assert:
 DATA_POP x0
 mov x1, \expected
 bl assertEqual
TEST_END
.endm
TEST_RELATION neq_true_if_values_different, neq, 142, 58, 1
TEST_RELATION neq_false_if_values_same, neq, 142, 142, 0
TEST_RELATION eq_true_if_values_same, eq, 142, 142, 1
TEST_RELATION eq_false_if_values_differ, eq, 142, 143, 0
