// Global register values
// Free: x23, x28

.macro LOAD_ADDRESS register, location
 adrp \register, \location@PAGE
 add \register, \register, \location@PAGEOFF
.endm
.macro DATA_PUSH register
 str \register, [x19], #8
.endm
.macro DATA_PUSH_AB register1, register2
 DATA_PUSH \register2
 DATA_PUSH \register1
.endm
.macro DATA_PUSH_ABC register1, register2, register3
 DATA_PUSH \register3
 DATA_PUSH \register2
 DATA_PUSH \register1
.endm
.macro DATA_POP register
 ldr \register, [x19, #-8]!
.endm
.macro DATA_POP_AB register1, register2
 DATA_POP \register1
 DATA_POP \register2
.endm
.macro DATA_POP_ABC register1, register2, register3
 DATA_POP_AB \register1, \register2
 DATA_POP \register3
.endm
.macro DATA_TOP register
 ldr \register, [x19, #-8]
.endm
.macro CONTROL_PUSH register
 str \register, [x27], #8
.endm
.macro CONTROL_POP register
 ldr \register, [x27, #-8]!
.endm
.macro STD_PROLOG
 str lr, [sp, #-16]!
.endm
.macro STD_EPILOG
 ldr lr, [sp], #16
.endm
// Store register contents into next slot in secondary
.macro STORE_SEC register
 str \register, [x25], #8
.endm

.include "unix_functions.macros"
.include "asUnit.macros"
.global _start
.text
.p2align 2
_start:
 STD_PROLOG
 TEST_ALL "ioTests"
 bl clear_bits_at_clears_bits
 unix_exit
 STD_EPILOG
 ret
.data
L_clear_bits:
.asciz "scares"
L_clear_bits_expected:
.asciz "sBares"
.text
.align 2
TEST_START clear_bits_at_clears_bits
 // Arrange:
 LOAD_ADDRESS x0, L_clear_bits
 mov x1, #1
 mov w2, #0x21 // Changes character to lowercase, moves it back by one
 // Act:
 bl clear_bits_at
 // Assert:
 LOAD_ADDRESS x0, L_clear_bits
 LOAD_ADDRESS x1, L_clear_bits_expected
 bl assertEqualStrings
TEST_END
TEST_START ioctl_before_and_after
TEST_END
